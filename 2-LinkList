# LinkList code
#include <stdio.h>
#include<stdlib.h>

typedef int Elem_type;
typedef struct LNode{
    Elem_type data;
    struct LNode *next;

}LNODE,*link_list;


//头插
void list_head_insert(LNode* &l){
    l=(link_list)malloc(sizeof(LNODE));//申请节点空间，头指针指向头节点
    Elem_type x;
    scanf("%d",&x);
    link_list s;
    l->next= nullptr;
//    s=(link_list) malloc(sizeof (LNODE));
//    s->data=x;
//    s->next= nullptr;
//    l->next=s;
    while(x!=99){

        s=(link_list) malloc(sizeof (LNODE));
        s->data=x;
        s->next=l->next;
        l->next=s;
        scanf("%d",&x);


    }

}

//尾插
void list_tail_insert(LNODE* &l){
    l=(link_list) malloc(sizeof (LNode));
    link_list s,r=l;
    Elem_type x;
    scanf("%d",&x);
    s= (link_list )malloc(sizeof(LNODE));
    while(x!=99){
        s=(link_list) malloc(sizeof (LNode));
        s->data=x;
        r->next=s;
        r=s;
        scanf("%d",&x);
    }
    r->next= nullptr;

}


//按位置查找
link_list get_elem(LNode *l,int pos){
    LNode *p=l->next;
    int i=1;
    if(pos==0){
        return l;
    }
    if(pos<1){

        return nullptr;
    }


    while(p && i<pos){
        p=p->next;
        i++;

    }
    return p;

}


//按值查找
link_list locate_elem(LNode *l,Elem_type elem){

    link_list p=l->next;
    while(p && p->data!=elem){
    p=p->next;
    }
    return p;

}


//第i个位置插元素
bool list_front_insert(link_list l,int pos,Elem_type e){
    link_list p= get_elem(l,pos-1);
    if(p== nullptr){
        return false;
    }
    link_list s=(link_list)malloc(sizeof(LNode));
    s->data=e;
    s->next=p->next;
    p->next=s;

    return true;
}

//删除函数
bool list_delete(link_list l,int pos){
    link_list p= get_elem(l,pos-1);
    link_list q=p->next;
    if(p== nullptr || q== nullptr){

        return false;
    }
    p->next=q->next;
    free(q);
    return true;
}



//输出函数
void PrintLinkList(link_list l){
    l=l->next;
    while(l!= nullptr){

        printf("%3d",l->data);
        l=l->next;
    }
    printf("\n");


}



int main() {
    link_list l,search;//l是头指针
    list_tail_insert(l);
    //list_head_insert(l);
    PrintLinkList(l);


    //位置查询
    search=get_elem(l,2);
    if(search){
        printf("search by position succeed\n");
        printf("%d\n",search->data);
    }


    //值查询
    search= locate_elem(l,3);
    if(search){

        printf("search by value succeed\n");
        printf("%d\n",search->data);
    }



//第i个位置插入
    bool ret;
    ret = list_front_insert(l,2,66);
    if(ret){
        printf("list position i succeed\n");
        PrintLinkList(l);
    }

    //删除
    list_delete(l,2);
    PrintLinkList(l);



    return 0;
}
