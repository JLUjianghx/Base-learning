# stack code
#include <stdio.h>
#include<stdlib.h>

#define MaxSize 6
typedef struct{
    int data[MaxSize];
    int top;

}sqStack;
//初始化栈
void init_stack(sqStack &s){
    s.top=-1;//代表栈为空
}

//判断是否初始化
bool stack_empty(sqStack s){
    if(s.top==-1){
        return true;
    }
    return false;
}

//入栈
bool inStack(sqStack &s,int x){
    if(s.top==MaxSize-1){
        return false;
    }
    s.data[++s.top]=x;
    return true;

}

//出栈
bool outStack(sqStack &s,int &x){

    if(s.top==-1){
        return false;
    }
    x=s.data[s.top--];
    return true;

}

//获取栈顶元素
bool getTop(sqStack s,int &x){
    if(s.top==-1){
        return false;
    }
    x=s.data[s.top];
    return true;

}


int main() {
    sqStack s;
    init_stack(s);
    bool ret_isEmpty= stack_empty(s);
    if(ret_isEmpty){
        printf("stack is empty\n");
    }
    inStack(s,1);
    inStack(s,2);
    inStack(s,3);
    inStack(s,4);

    int x;
    bool flag= getTop(s,x);
    if(flag){
        printf("top is %d",x);
    }

    return 0;
}
